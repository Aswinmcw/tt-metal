---
- name: Set up package dependencies on node
  hosts: all
  become: true
  tasks:
    - name: Install packages
      apt:
        update_cache: yes
        pkg:
          - software-properties-common=0.99.9.12
          - build-essential=12.8ubuntu1.1
          - python3.8-venv=3.8.10-0ubuntu1~20.04.8
          - libgoogle-glog-dev=0.4.0-1build1
          - ruby=1:2.7+1
          - libyaml-cpp-dev=0.6.2-4ubuntu1
          - git
          - git-lfs
          - clang-6.0=1:6.0.1-14
          - libboost-all-dev=1.71.0.0ubuntu2
          - libsndfile1=1.0.28-7ubuntu0.1
          - libhwloc-dev
          - pandoc

- name: Create tt_metal_infra assets
  hosts: all
  tasks:
    - name: Remove current installation of tt_metal_infra
      become: yes
      file:
        path: /opt/tt_metal_infra
        state: absent
    - name: Make workspace and syseng directories
      become: yes
      file:
        path: /opt/tt_metal_infra
        state: directory
        mode: ugo+r
    - name: Copy scripts
      become: yes
      ansible.builtin.copy:
        src: ../scripts/
        dest: "/opt/tt_metal_infra/scripts/"
    - name: Copy assets
      become: yes
      ansible.builtin.copy:
        src: ../assets/
        dest: "/opt/tt_metal_infra/assets/"

- name: Install doxygen
  hosts: all
  tasks:
    - name: Make doxygen workspace
      become: yes
      file:
        path: /opt/tt_metal_infra/doxygen
        state: directory
    - name: Download doxygen
      become: yes
      ansible.builtin.uri:
        url: "https://www.doxygen.nl/files/doxygen-1.9.6.linux.bin.tar.gz"
        dest: "/opt/tt_metal_infra/doxygen/"
        status_code: [200, 304]
    - name: Unpack doxygen
      become: yes
      ansible.builtin.unarchive:
        src: /opt/tt_metal_infra/doxygen/doxygen-1.9.6.linux.bin.tar.gz
        dest: "/opt/tt_metal_infra/doxygen/"
        remote_src: yes
    - name: Install doxygen
      become: yes
      ansible.builtin.shell:
        chdir: "/opt/tt_metal_infra/doxygen/doxygen-1.9.6"
        cmd: "make install"

- name: Install SMI
  hosts: all
  tasks:
    - name: Make tt_metal_infra workspace for tt-smi
      become: yes
      file:
        path: "/opt/tt_metal_infra/tt_smi/{{ arch }}"
        state: directory
    - name: Copy SMI to workspace (assuming assets downloaded)
      become: yes
      ansible.builtin.copy:
        src: "../assets/tt_smi/{{ arch }}/tt-smi"
        dest: "/opt/tt_metal_infra/tt_smi/{{ arch }}/tt-smi"
    - name: Install SMI to local bin
      become: yes
      ansible.builtin.copy:
        remote_src: true
        src: "/opt/tt_metal_infra/tt_smi/{{ arch }}/tt-smi"
        dest: "/usr/local/bin/tt-smi"
    - name: Make tt-smi executable
      become: yes
      ansible.builtin.file:
        path: "/usr/local/bin/tt-smi"
        mode: ugo+x
    - name: Execute tt-smi as a test drive
      ansible.builtin.shell:
        cmd: "tt-smi --version"
