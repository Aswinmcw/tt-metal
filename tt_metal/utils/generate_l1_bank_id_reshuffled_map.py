import argparse
import random

def generate_bank_to_noc_coord_mapping_header(seed_val, file_path):
    random.seed(seed_val)

    num_bank_ids = 128;
    bank_ids = list(range(0, num_bank_ids))
    random.shuffle(bank_ids)
    bank_id_set = set(bank_ids)
    assert len(bank_id_set) == num_bank_ids

    file = open(file_path,"w")
    header_preamble = [
        "#pragma once\n\n",
        "/*\n",
        "* This file can be autogenerated by running generate_l1_bank_id_reshuffled_map.py.\n",
        "* This file contains values that are visible to both host and device compiled code.\n",
        "*/\n\n"
    ]
    file.writelines(header_preamble)
    file.write("void init_shuffled_l1_bank_id_mapping(uint8_t shuffled_bank_ids[]) {\n")

    for bank_id in range(0, num_bank_ids):
        file.write(f"\tshuffled_bank_ids[{bank_id}] = {bank_ids[bank_id]};\n")

    file.write("}")
    file.close()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-s', '--seed', type=int, required=False, default=0, help="Value to initialize the random number generator")
    parser.add_argument(
        '-p', '--path', type=str, required=False,
        default="tt_metal/hostdevcommon/bank_to_noc_coord_mapping.h",
        help="Full path to file that will be generated")
    args = parser.parse_args()
    generate_bank_to_noc_coord_mapping_header(args.seed, args.path)
